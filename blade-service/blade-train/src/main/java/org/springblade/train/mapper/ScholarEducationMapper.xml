<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.springblade.train.mapper.ScholarEducationMapper">

	<resultMap id="ScholarEducationModelMap" type="org.springblade.train.entity.ScholarEducationModel">
		<id column="id" property="id"/>
	</resultMap>

	<!-- 根据参数分页查询学者学历分析列表 -->
	<sql id="tableSql">
		SELECT
			rs.id,bs.realname,bs.username,bs.sex,bs.full_face_photo,bs.left_face_photo,bs.id as studentId,
			bs.right_face_photo,bs.station,bs.department_name,bs.plate_number,bs.trans_permit_code,bs.identify_number,
			rs.begin_time,rs.end_time,
			rs.course_status,
			case when (rs.course_status=3 or (rs.course_status=1 and bce.score=0)) then 1 else 0 end as enable,
			bc.`name` as courseName,ruc.id as courseId,
			bu.id as unitId,bu.simple_name as unitName,
			bt.id as tradeKindId,bt.`name` as tradeKindName
		FROM
			base_student bs
			LEFT JOIN relation_student_course rs on bs.id = rs.student_id
			LEFT JOIN relation_unit_course ruc on rs.rel_unit_course_id = ruc.id
			LEFT JOIN base_course bc on ruc.course_id = bc.id
			LEFT JOIN base_unit bu on bs.unit_id = bu.id
			LEFT JOIN base_trade_kind bt on bu.trade_kind_id = bt.id
			LEFT JOIN base_course_ext bce on bce.rel_unit_course_id = ruc.id
		where bs.deleted = 0 and bs.`status`=1
			and bs.unit_id = ${unitId}
	</sql>

	<sql id="querySql">
		<if test="userName != null and userName != ''">
			and username LIKE CONCAT('%', #{userName}, '%')
		</if>

		<if test="realName != null and realName != ''">
			and realName LIKE CONCAT('%', #{realName}, '%')
		</if>

		<if test="identifyNumber != null and identifyNumber != ''">
			and identify_number like CONCAT('%', #{identifyNumber}, '%')
		</if>

		<if test="studentId != null and studentId != ''">
			and id = #{studentId}
		</if>
	</sql>

	<sql id="orderSql">
		<!-- 默认排序规则 -->
		<if test="orderColumn == null or orderColumn == ''">
			order by end_time desc
		</if>
		<if test="orderColumn != null and orderColumn != ''">
			order by ${orderColumn}
		</if>
		<if test="orderColumn != null and orderColumn != '' and order != 0">
			desc
		</if>
	</sql>

	<select id="getScholarEducationList" resultMap="ScholarEducationModelMap"
			parameterType="org.springblade.train.page.ScholarEducationPage">
		<if test="size == 0">
			select * from (
			<include refid="tableSql"/>
			)b
			where 1=1
			<include refid="querySql"/>
			<include refid="orderSql"/>
			limit ${total}
		</if>
		<if test="current != 0">
			select * from (
			<include refid="tableSql"/>
			)b
			where 1=1
			<include refid="querySql"/>
			<include refid="orderSql"/>
			limit ${offsetNo},${size}
		</if>
	</select>

	<select id="getScholarEducationListTotal"
			parameterType="org.springblade.train.page.ScholarEducationPage"
			resultType="int">
		select COUNT(1) from (
		<include refid="tableSql"/>
		)d where 1 = 1
		<include refid="querySql"/>
	</select>

	<select id="getTrainingList" parameterType="Integer" resultType="org.springblade.train.entity.TrainingListModel">
        SELECT realName,identifyNumber,'驾驶员' as station,
        concat(ROUND(duration/60),'分钟/120分钟') as studyCount,
        score,student_id as studentId,'达标' as result
        from (
            SELECT b.realname,b.identify_number as identifyNumber,MAX(score) as score, c.duration,a.student_id
             from biz_test_record a
            INNER JOIN base_student b on a.student_id = b.id
            INNER JOIN relation_student_course d on d.student_id = b.id and d.rel_unit_course_id = #{relUnitCourseId}
            INNER JOIN (SELECT sum(duration) as duration,student_id
                from biz_study_record where valid=1 and rel_unit_course_id=#{relUnitCourseId}
                GROUP BY student_id) as c on b.id = c.student_id
            WHERE a.rel_unit_course_id = #{relUnitCourseId} and b.unit_id not in (1,2,16)
            GROUP BY b.identify_number,b.realname,c.duration,a.student_id
        ) list
    </select>

    <select id="getCourseExt" resultType="HashMap" parameterType="Integer">
        SELECT
            c.begin_time AS beginTime,
            c.end_time AS endTime,
            b.`name`,
            b.keyword,
            b.description,
            c.score,
            du.duration,
            du.source_file AS sourceFile
        FROM
            relation_unit_course a
                INNER JOIN base_course b on b.id = a.course_id
                INNER JOIN base_course_ext c on c.rel_unit_course_id = a.id
                INNER JOIN(
                select
                    ruc.id,bc.source_file,sum(bc.duration) as duration
                from
                    relation_course_courseware rc
                        INNER JOIN base_courseware bc on bc.id = rc.courseware_id
                        INNER JOIN relation_unit_course ruc ON rc.course_id = ruc.course_id
                where 1=1
                  AND bc.deleted = 0
                  AND ruc.id = #{courseId}
                GROUP BY
                    ruc.id,bc.source_file
                )du on du.id = a.id
        WHERE a.id = #{courseId}
    </select>
</mapper>
